class Solution(object):
    def subarraySum(self, nums, k):
        count = 0
        prefix_sum = {0: 1}  # Tracks cumulative sum frequencies
        current_sum = 0
        
        for num in nums:
            current_sum += num
            # If (current_sum - k) exists, it means a subarray sums to k
            if current_sum - k in prefix_sum:
                count += prefix_sum[current_sum - k]
            # Store the frequency of current_sum
            prefix_sum[current_sum] = prefix_sum.get(current_sum, 0) + 1
        
        return count
